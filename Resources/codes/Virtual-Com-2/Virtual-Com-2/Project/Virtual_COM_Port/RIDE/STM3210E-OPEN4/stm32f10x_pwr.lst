
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\STM3210E-OPEN4\stm32f10x_pwr.o:     file format elf32-littlearm
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\STM3210E-OPEN4\stm32f10x_pwr.o


Disassembly of section .text.__WFI:

00000000 <__WFI>:
__WFI():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\CMSIS\CM3\CoreSupport/core_cm3.h:1211

static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }

static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
   0:	bf30      	wfi
   2:	4770      	bx	lr

Disassembly of section .text.PWR_DeInit:

00000000 <PWR_DeInit>:
PWR_DeInit():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:123
  * @param  None
  * @retval None
  */
void PWR_DeInit(void)
{
  RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
   0:	2101      	movs	r1, #1
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:122
  * @brief  Deinitializes the PWR peripheral registers to their default reset values.
  * @param  None
  * @retval None
  */
void PWR_DeInit(void)
{
   2:	b510      	push	{r4, lr}
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:123
  RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
   4:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
   8:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:124
  RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
   c:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
  10:	2100      	movs	r1, #0
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:125
}
  12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:124
  * @retval None
  */
void PWR_DeInit(void)
{
  RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
  RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
  16:	f7ff bffe 	b.w	0 <RCC_APB1PeriphResetCmd>

Disassembly of section .text.PWR_BackupAccessCmd:

00000000 <PWR_BackupAccessCmd>:
PWR_BackupAccessCmd():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:137
  */
void PWR_BackupAccessCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  *(__IO uint32_t *) CR_DBP_BB = (uint32_t)NewState;
   0:	4b01      	ldr	r3, [pc, #4]	; (8 <PWR_BackupAccessCmd+0x8>)
   2:	6018      	str	r0, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:138
}
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	420e0020 	.word	0x420e0020

Disassembly of section .text.PWR_PVDCmd:

00000000 <PWR_PVDCmd>:
PWR_PVDCmd():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:150
  */
void PWR_PVDCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)NewState;
   0:	4b01      	ldr	r3, [pc, #4]	; (8 <PWR_PVDCmd+0x8>)
   2:	6018      	str	r0, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:151
}
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	420e0010 	.word	0x420e0010

Disassembly of section .text.PWR_PVDLevelConfig:

00000000 <PWR_PVDLevelConfig>:
PWR_PVDLevelConfig():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:172
void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel)
{
  uint32_t tmpreg = 0;
  /* Check the parameters */
  assert_param(IS_PWR_PVD_LEVEL(PWR_PVDLevel));
  tmpreg = PWR->CR;
   0:	4b03      	ldr	r3, [pc, #12]	; (10 <PWR_PVDLevelConfig+0x10>)
   2:	681a      	ldr	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:174
  /* Clear PLS[7:5] bits */
  tmpreg &= CR_PLS_Mask;
   4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:176
  /* Set PLS[7:5] bits according to PWR_PVDLevel value */
  tmpreg |= PWR_PVDLevel;
   8:	ea40 0202 	orr.w	r2, r0, r2
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:178
  /* Store the new value */
  PWR->CR = tmpreg;
   c:	601a      	str	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:179
}
   e:	4770      	bx	lr
  10:	40007000 	.word	0x40007000

Disassembly of section .text.PWR_WakeUpPinCmd:

00000000 <PWR_WakeUpPinCmd>:
PWR_WakeUpPinCmd():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:191
  */
void PWR_WakeUpPinCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  *(__IO uint32_t *) CSR_EWUP_BB = (uint32_t)NewState;
   0:	60184b01 	.word	0x60184b01
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:192
}
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	420e00a0 	.word	0x420e00a0

Disassembly of section .text.PWR_EnterSTOPMode:

00000000 <PWR_EnterSTOPMode>:
PWR_EnterSTOPMode():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:207
  *     @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
  *     @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
  * @retval None
  */
void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
{
   0:	b510      	push	{r4, lr}
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:214
  /* Check the parameters */
  assert_param(IS_PWR_REGULATOR(PWR_Regulator));
  assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
  
  /* Select the regulator state in STOP mode ---------------------------------*/
  tmpreg = PWR->CR;
   2:	4b0c      	ldr	r3, [pc, #48]	; (34 <PWR_EnterSTOPMode+0x34>)
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:225
  PWR->CR = tmpreg;
  /* Set SLEEPDEEP bit of Cortex System Control Register */
  *(__IO uint32_t *) SCB_SysCtrl |= SysCtrl_SLEEPDEEP_Set;
  
  /* Select STOP mode entry --------------------------------------------------*/
  if(PWR_STOPEntry == PWR_STOPEntry_WFI)
   4:	2901      	cmp	r1, #1
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:214
  /* Check the parameters */
  assert_param(IS_PWR_REGULATOR(PWR_Regulator));
  assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
  
  /* Select the regulator state in STOP mode ---------------------------------*/
  tmpreg = PWR->CR;
   6:	681a      	ldr	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:216
  /* Clear PDDS and LPDS bits */
  tmpreg &= CR_DS_Mask;
   8:	f022 0203 	bic.w	r2, r2, #3
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:218
  /* Set LPDS bit according to PWR_Regulator value */
  tmpreg |= PWR_Regulator;
   c:	ea40 0202 	orr.w	r2, r0, r2
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:220
  /* Store the new value */
  PWR->CR = tmpreg;
  10:	601a      	str	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:222
  /* Set SLEEPDEEP bit of Cortex System Control Register */
  *(__IO uint32_t *) SCB_SysCtrl |= SysCtrl_SLEEPDEEP_Set;
  12:	4b09      	ldr	r3, [pc, #36]	; (38 <PWR_EnterSTOPMode+0x38>)
  14:	681a      	ldr	r2, [r3, #0]
  16:	461c      	mov	r4, r3
  18:	f042 0204 	orr.w	r2, r2, #4
  1c:	601a      	str	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:225
  
  /* Select STOP mode entry --------------------------------------------------*/
  if(PWR_STOPEntry == PWR_STOPEntry_WFI)
  1e:	d102      	bne.n	26 <PWR_EnterSTOPMode+0x26>
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:228
  {   
    /* Request Wait For Interrupt */
    __WFI();
  20:	f7ff fffe 	bl	0 <PWR_EnterSTOPMode>
  24:	e000      	b.n	28 <PWR_EnterSTOPMode+0x28>
__WFE():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\CMSIS\CM3\CoreSupport/core_cm3.h:1212
static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
  26:	bf20      	wfe
PWR_EnterSTOPMode():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:237
    /* Request Wait For Event */
    __WFE();
  }
  
  /* Reset SLEEPDEEP bit of Cortex System Control Register */
  *(__IO uint32_t *) SCB_SysCtrl &= SysCtrl_SLEEPDEEP_Reset;  
  28:	6823      	ldr	r3, [r4, #0]
  2a:	f023 0304 	bic.w	r3, r3, #4
  2e:	6023      	str	r3, [r4, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:238
}
  30:	bd10      	pop	{r4, pc}
  32:	bf00      	nop
  34:	40007000 	.word	0x40007000
  38:	e000ed10 	.word	0xe000ed10

Disassembly of section .text.PWR_EnterSTANDBYMode:

00000000 <PWR_EnterSTANDBYMode>:
PWR_EnterSTANDBYMode():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:248
  * @retval None
  */
void PWR_EnterSTANDBYMode(void)
{
  /* Clear Wake-up flag */
  PWR->CR |= CR_CWUF_Set;
   0:	681a4b07 	.word	0x681a4b07
   4:	f042 0204 	orr.w	r2, r2, #4
   8:	601a      	str	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:250
  /* Select STANDBY mode */
  PWR->CR |= CR_PDDS_Set;
   a:	681a      	ldr	r2, [r3, #0]
   c:	f042 0202 	orr.w	r2, r2, #2
  10:	601a      	str	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:252
  /* Set SLEEPDEEP bit of Cortex System Control Register */
  *(__IO uint32_t *) SCB_SysCtrl |= SysCtrl_SLEEPDEEP_Set;
  12:	4b04      	ldr	r3, [pc, #16]	; (24 <PWR_EnterSTANDBYMode+0x24>)
  14:	681a      	ldr	r2, [r3, #0]
  16:	f042 0204 	orr.w	r2, r2, #4
  1a:	601a      	str	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:258
/* This option is used to ensure that store operations are completed */
#if defined ( __CC_ARM   )
  __force_stores();
#endif
  /* Request Wait For Interrupt */
  __WFI();
  1c:	f7ff bffe 	b.w	0 <PWR_EnterSTANDBYMode>
  20:	40007000 	.word	0x40007000
  24:	e000ed10 	.word	0xe000ed10

Disassembly of section .text.PWR_GetFlagStatus:

00000000 <PWR_GetFlagStatus>:
PWR_GetFlagStatus():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:276
{
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_PWR_GET_FLAG(PWR_FLAG));
  
  if ((PWR->CSR & PWR_FLAG) != (uint32_t)RESET)
   0:	685b4b03 	.word	0x685b4b03
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:278
  {
    bitstatus = SET;
   4:	4218      	tst	r0, r3
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:286
  {
    bitstatus = RESET;
  }
  /* Return the flag status */
  return bitstatus;
}
   6:	bf0c      	ite	eq
   8:	2000      	moveq	r0, #0
   a:	2001      	movne	r0, #1
   c:	4770      	bx	lr
   e:	bf00      	nop
  10:	40007000 	.word	0x40007000

Disassembly of section .text.PWR_ClearFlag:

00000000 <PWR_ClearFlag>:
PWR_ClearFlag():
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:301
void PWR_ClearFlag(uint32_t PWR_FLAG)
{
  /* Check the parameters */
  assert_param(IS_PWR_CLEAR_FLAG(PWR_FLAG));
         
  PWR->CR |=  PWR_FLAG << 2;
   0:	681a4b02 	.word	0x681a4b02
   4:	ea42 0280 	orr.w	r2, r2, r0, lsl #2
   8:	601a      	str	r2, [r3, #0]
C:\Downloaded Files\Virtual-Com-2\Virtual-Com-2\Project\Virtual_COM_Port\RIDE\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_pwr.c:302
}
   a:	4770      	bx	lr
   c:	40007000 	.word	0x40007000
